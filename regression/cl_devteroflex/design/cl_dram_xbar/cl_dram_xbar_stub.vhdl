-- Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2021.1 (lin64) Build 3247384 Thu Jun 10 19:36:07 MDT 2021
-- Date        : Sun Apr 10 23:10:56 2022
-- Host        : ulises-OptiPlex-7060 running 64-bit Ubuntu 20.04.4 LTS
-- Command     : write_vhdl -force -mode synth_stub
--               /home/eda/VivadoProjects/IP_generator_2021.1/managed_ip_project/managed_ip_project.gen/sources_1/bd/cl_dram_xbar/cl_dram_xbar_stub.vhdl
-- Design      : cl_dram_xbar
-- Purpose     : Stub declaration of top-level module interface
-- Device      : xcvu9p-flgb2104-2-i
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity cl_dram_xbar is
  Port ( 
    ACLK : in STD_LOGIC;
    ARESETN : in STD_LOGIC;
    M_00G_16G_AXI_araddr : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_00G_16G_AXI_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_00G_16G_AXI_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_00G_16G_AXI_arid : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M_00G_16G_AXI_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_00G_16G_AXI_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_00G_16G_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_00G_16G_AXI_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_00G_16G_AXI_arready : in STD_LOGIC;
    M_00G_16G_AXI_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_00G_16G_AXI_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_00G_16G_AXI_arvalid : out STD_LOGIC;
    M_00G_16G_AXI_awaddr : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_00G_16G_AXI_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_00G_16G_AXI_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_00G_16G_AXI_awid : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M_00G_16G_AXI_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_00G_16G_AXI_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_00G_16G_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_00G_16G_AXI_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_00G_16G_AXI_awready : in STD_LOGIC;
    M_00G_16G_AXI_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_00G_16G_AXI_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_00G_16G_AXI_awvalid : out STD_LOGIC;
    M_00G_16G_AXI_bid : in STD_LOGIC_VECTOR ( 6 downto 0 );
    M_00G_16G_AXI_bready : out STD_LOGIC;
    M_00G_16G_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_00G_16G_AXI_bvalid : in STD_LOGIC;
    M_00G_16G_AXI_rdata : in STD_LOGIC_VECTOR ( 511 downto 0 );
    M_00G_16G_AXI_rid : in STD_LOGIC_VECTOR ( 6 downto 0 );
    M_00G_16G_AXI_rlast : in STD_LOGIC;
    M_00G_16G_AXI_rready : out STD_LOGIC;
    M_00G_16G_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_00G_16G_AXI_rvalid : in STD_LOGIC;
    M_00G_16G_AXI_wdata : out STD_LOGIC_VECTOR ( 511 downto 0 );
    M_00G_16G_AXI_wlast : out STD_LOGIC;
    M_00G_16G_AXI_wready : in STD_LOGIC;
    M_00G_16G_AXI_wstrb : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_00G_16G_AXI_wvalid : out STD_LOGIC;
    M_16G_32G_AXI_araddr : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_16G_32G_AXI_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_16G_32G_AXI_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_16G_32G_AXI_arid : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M_16G_32G_AXI_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_16G_32G_AXI_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_16G_32G_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_16G_32G_AXI_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_16G_32G_AXI_arready : in STD_LOGIC;
    M_16G_32G_AXI_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_16G_32G_AXI_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_16G_32G_AXI_arvalid : out STD_LOGIC;
    M_16G_32G_AXI_awaddr : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_16G_32G_AXI_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_16G_32G_AXI_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_16G_32G_AXI_awid : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M_16G_32G_AXI_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_16G_32G_AXI_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_16G_32G_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_16G_32G_AXI_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_16G_32G_AXI_awready : in STD_LOGIC;
    M_16G_32G_AXI_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_16G_32G_AXI_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_16G_32G_AXI_awvalid : out STD_LOGIC;
    M_16G_32G_AXI_bid : in STD_LOGIC_VECTOR ( 6 downto 0 );
    M_16G_32G_AXI_bready : out STD_LOGIC;
    M_16G_32G_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_16G_32G_AXI_bvalid : in STD_LOGIC;
    M_16G_32G_AXI_rdata : in STD_LOGIC_VECTOR ( 511 downto 0 );
    M_16G_32G_AXI_rid : in STD_LOGIC_VECTOR ( 6 downto 0 );
    M_16G_32G_AXI_rlast : in STD_LOGIC;
    M_16G_32G_AXI_rready : out STD_LOGIC;
    M_16G_32G_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_16G_32G_AXI_rvalid : in STD_LOGIC;
    M_16G_32G_AXI_wdata : out STD_LOGIC_VECTOR ( 511 downto 0 );
    M_16G_32G_AXI_wlast : out STD_LOGIC;
    M_16G_32G_AXI_wready : in STD_LOGIC;
    M_16G_32G_AXI_wstrb : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_16G_32G_AXI_wvalid : out STD_LOGIC;
    M_32G_48G_AXI_araddr : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_32G_48G_AXI_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_32G_48G_AXI_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_32G_48G_AXI_arid : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M_32G_48G_AXI_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_32G_48G_AXI_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_32G_48G_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_32G_48G_AXI_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_32G_48G_AXI_arready : in STD_LOGIC;
    M_32G_48G_AXI_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_32G_48G_AXI_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_32G_48G_AXI_arvalid : out STD_LOGIC;
    M_32G_48G_AXI_awaddr : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_32G_48G_AXI_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_32G_48G_AXI_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_32G_48G_AXI_awid : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M_32G_48G_AXI_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_32G_48G_AXI_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_32G_48G_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_32G_48G_AXI_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_32G_48G_AXI_awready : in STD_LOGIC;
    M_32G_48G_AXI_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_32G_48G_AXI_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_32G_48G_AXI_awvalid : out STD_LOGIC;
    M_32G_48G_AXI_bid : in STD_LOGIC_VECTOR ( 6 downto 0 );
    M_32G_48G_AXI_bready : out STD_LOGIC;
    M_32G_48G_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_32G_48G_AXI_bvalid : in STD_LOGIC;
    M_32G_48G_AXI_rdata : in STD_LOGIC_VECTOR ( 511 downto 0 );
    M_32G_48G_AXI_rid : in STD_LOGIC_VECTOR ( 6 downto 0 );
    M_32G_48G_AXI_rlast : in STD_LOGIC;
    M_32G_48G_AXI_rready : out STD_LOGIC;
    M_32G_48G_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_32G_48G_AXI_rvalid : in STD_LOGIC;
    M_32G_48G_AXI_wdata : out STD_LOGIC_VECTOR ( 511 downto 0 );
    M_32G_48G_AXI_wlast : out STD_LOGIC;
    M_32G_48G_AXI_wready : in STD_LOGIC;
    M_32G_48G_AXI_wstrb : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_32G_48G_AXI_wvalid : out STD_LOGIC;
    M_48G_64G_AXI_araddr : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_48G_64G_AXI_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_48G_64G_AXI_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_48G_64G_AXI_arid : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M_48G_64G_AXI_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_48G_64G_AXI_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_48G_64G_AXI_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_48G_64G_AXI_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_48G_64G_AXI_arready : in STD_LOGIC;
    M_48G_64G_AXI_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_48G_64G_AXI_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_48G_64G_AXI_arvalid : out STD_LOGIC;
    M_48G_64G_AXI_awaddr : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_48G_64G_AXI_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_48G_64G_AXI_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_48G_64G_AXI_awid : out STD_LOGIC_VECTOR ( 6 downto 0 );
    M_48G_64G_AXI_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_48G_64G_AXI_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_48G_64G_AXI_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_48G_64G_AXI_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_48G_64G_AXI_awready : in STD_LOGIC;
    M_48G_64G_AXI_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_48G_64G_AXI_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_48G_64G_AXI_awvalid : out STD_LOGIC;
    M_48G_64G_AXI_bid : in STD_LOGIC_VECTOR ( 6 downto 0 );
    M_48G_64G_AXI_bready : out STD_LOGIC;
    M_48G_64G_AXI_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_48G_64G_AXI_bvalid : in STD_LOGIC;
    M_48G_64G_AXI_rdata : in STD_LOGIC_VECTOR ( 511 downto 0 );
    M_48G_64G_AXI_rid : in STD_LOGIC_VECTOR ( 6 downto 0 );
    M_48G_64G_AXI_rlast : in STD_LOGIC;
    M_48G_64G_AXI_rready : out STD_LOGIC;
    M_48G_64G_AXI_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_48G_64G_AXI_rvalid : in STD_LOGIC;
    M_48G_64G_AXI_wdata : out STD_LOGIC_VECTOR ( 511 downto 0 );
    M_48G_64G_AXI_wlast : out STD_LOGIC;
    M_48G_64G_AXI_wready : in STD_LOGIC;
    M_48G_64G_AXI_wstrb : out STD_LOGIC_VECTOR ( 63 downto 0 );
    M_48G_64G_AXI_wvalid : out STD_LOGIC;
    S_PCIS_DRAM_AXI_araddr : in STD_LOGIC_VECTOR ( 63 downto 0 );
    S_PCIS_DRAM_AXI_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_PCIS_DRAM_AXI_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_PCIS_DRAM_AXI_arid : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_PCIS_DRAM_AXI_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_PCIS_DRAM_AXI_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_PCIS_DRAM_AXI_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_PCIS_DRAM_AXI_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_PCIS_DRAM_AXI_arready : out STD_LOGIC;
    S_PCIS_DRAM_AXI_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_PCIS_DRAM_AXI_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_PCIS_DRAM_AXI_arvalid : in STD_LOGIC;
    S_PCIS_DRAM_AXI_awaddr : in STD_LOGIC_VECTOR ( 63 downto 0 );
    S_PCIS_DRAM_AXI_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_PCIS_DRAM_AXI_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_PCIS_DRAM_AXI_awid : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_PCIS_DRAM_AXI_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_PCIS_DRAM_AXI_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_PCIS_DRAM_AXI_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_PCIS_DRAM_AXI_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_PCIS_DRAM_AXI_awready : out STD_LOGIC;
    S_PCIS_DRAM_AXI_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_PCIS_DRAM_AXI_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_PCIS_DRAM_AXI_awvalid : in STD_LOGIC;
    S_PCIS_DRAM_AXI_bid : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_PCIS_DRAM_AXI_bready : in STD_LOGIC;
    S_PCIS_DRAM_AXI_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_PCIS_DRAM_AXI_bvalid : out STD_LOGIC;
    S_PCIS_DRAM_AXI_rdata : out STD_LOGIC_VECTOR ( 511 downto 0 );
    S_PCIS_DRAM_AXI_rid : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_PCIS_DRAM_AXI_rlast : out STD_LOGIC;
    S_PCIS_DRAM_AXI_rready : in STD_LOGIC;
    S_PCIS_DRAM_AXI_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_PCIS_DRAM_AXI_rvalid : out STD_LOGIC;
    S_PCIS_DRAM_AXI_wdata : in STD_LOGIC_VECTOR ( 511 downto 0 );
    S_PCIS_DRAM_AXI_wlast : in STD_LOGIC;
    S_PCIS_DRAM_AXI_wready : out STD_LOGIC;
    S_PCIS_DRAM_AXI_wstrb : in STD_LOGIC_VECTOR ( 63 downto 0 );
    S_PCIS_DRAM_AXI_wvalid : in STD_LOGIC;
    S_RTL_DRAM_AXI_araddr : in STD_LOGIC_VECTOR ( 63 downto 0 );
    S_RTL_DRAM_AXI_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_RTL_DRAM_AXI_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_RTL_DRAM_AXI_arid : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_RTL_DRAM_AXI_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_RTL_DRAM_AXI_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_RTL_DRAM_AXI_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_RTL_DRAM_AXI_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_RTL_DRAM_AXI_arready : out STD_LOGIC;
    S_RTL_DRAM_AXI_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_RTL_DRAM_AXI_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_RTL_DRAM_AXI_arvalid : in STD_LOGIC;
    S_RTL_DRAM_AXI_awaddr : in STD_LOGIC_VECTOR ( 63 downto 0 );
    S_RTL_DRAM_AXI_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_RTL_DRAM_AXI_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_RTL_DRAM_AXI_awid : in STD_LOGIC_VECTOR ( 5 downto 0 );
    S_RTL_DRAM_AXI_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_RTL_DRAM_AXI_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_RTL_DRAM_AXI_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_RTL_DRAM_AXI_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_RTL_DRAM_AXI_awready : out STD_LOGIC;
    S_RTL_DRAM_AXI_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_RTL_DRAM_AXI_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_RTL_DRAM_AXI_awvalid : in STD_LOGIC;
    S_RTL_DRAM_AXI_bid : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_RTL_DRAM_AXI_bready : in STD_LOGIC;
    S_RTL_DRAM_AXI_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_RTL_DRAM_AXI_bvalid : out STD_LOGIC;
    S_RTL_DRAM_AXI_rdata : out STD_LOGIC_VECTOR ( 511 downto 0 );
    S_RTL_DRAM_AXI_rid : out STD_LOGIC_VECTOR ( 5 downto 0 );
    S_RTL_DRAM_AXI_rlast : out STD_LOGIC;
    S_RTL_DRAM_AXI_rready : in STD_LOGIC;
    S_RTL_DRAM_AXI_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_RTL_DRAM_AXI_rvalid : out STD_LOGIC;
    S_RTL_DRAM_AXI_wdata : in STD_LOGIC_VECTOR ( 511 downto 0 );
    S_RTL_DRAM_AXI_wlast : in STD_LOGIC;
    S_RTL_DRAM_AXI_wready : out STD_LOGIC;
    S_RTL_DRAM_AXI_wstrb : in STD_LOGIC_VECTOR ( 63 downto 0 );
    S_RTL_DRAM_AXI_wvalid : in STD_LOGIC
  );

end cl_dram_xbar;

architecture stub of cl_dram_xbar is
attribute syn_black_box : boolean;
attribute black_box_pad_pin : string;
attribute syn_black_box of stub : architecture is true;
attribute black_box_pad_pin of stub : architecture is "ACLK,ARESETN,M_00G_16G_AXI_araddr[63:0],M_00G_16G_AXI_arburst[1:0],M_00G_16G_AXI_arcache[3:0],M_00G_16G_AXI_arid[6:0],M_00G_16G_AXI_arlen[7:0],M_00G_16G_AXI_arlock[0:0],M_00G_16G_AXI_arprot[2:0],M_00G_16G_AXI_arqos[3:0],M_00G_16G_AXI_arready,M_00G_16G_AXI_arregion[3:0],M_00G_16G_AXI_arsize[2:0],M_00G_16G_AXI_arvalid,M_00G_16G_AXI_awaddr[63:0],M_00G_16G_AXI_awburst[1:0],M_00G_16G_AXI_awcache[3:0],M_00G_16G_AXI_awid[6:0],M_00G_16G_AXI_awlen[7:0],M_00G_16G_AXI_awlock[0:0],M_00G_16G_AXI_awprot[2:0],M_00G_16G_AXI_awqos[3:0],M_00G_16G_AXI_awready,M_00G_16G_AXI_awregion[3:0],M_00G_16G_AXI_awsize[2:0],M_00G_16G_AXI_awvalid,M_00G_16G_AXI_bid[6:0],M_00G_16G_AXI_bready,M_00G_16G_AXI_bresp[1:0],M_00G_16G_AXI_bvalid,M_00G_16G_AXI_rdata[511:0],M_00G_16G_AXI_rid[6:0],M_00G_16G_AXI_rlast,M_00G_16G_AXI_rready,M_00G_16G_AXI_rresp[1:0],M_00G_16G_AXI_rvalid,M_00G_16G_AXI_wdata[511:0],M_00G_16G_AXI_wlast,M_00G_16G_AXI_wready,M_00G_16G_AXI_wstrb[63:0],M_00G_16G_AXI_wvalid,M_16G_32G_AXI_araddr[63:0],M_16G_32G_AXI_arburst[1:0],M_16G_32G_AXI_arcache[3:0],M_16G_32G_AXI_arid[6:0],M_16G_32G_AXI_arlen[7:0],M_16G_32G_AXI_arlock[0:0],M_16G_32G_AXI_arprot[2:0],M_16G_32G_AXI_arqos[3:0],M_16G_32G_AXI_arready,M_16G_32G_AXI_arregion[3:0],M_16G_32G_AXI_arsize[2:0],M_16G_32G_AXI_arvalid,M_16G_32G_AXI_awaddr[63:0],M_16G_32G_AXI_awburst[1:0],M_16G_32G_AXI_awcache[3:0],M_16G_32G_AXI_awid[6:0],M_16G_32G_AXI_awlen[7:0],M_16G_32G_AXI_awlock[0:0],M_16G_32G_AXI_awprot[2:0],M_16G_32G_AXI_awqos[3:0],M_16G_32G_AXI_awready,M_16G_32G_AXI_awregion[3:0],M_16G_32G_AXI_awsize[2:0],M_16G_32G_AXI_awvalid,M_16G_32G_AXI_bid[6:0],M_16G_32G_AXI_bready,M_16G_32G_AXI_bresp[1:0],M_16G_32G_AXI_bvalid,M_16G_32G_AXI_rdata[511:0],M_16G_32G_AXI_rid[6:0],M_16G_32G_AXI_rlast,M_16G_32G_AXI_rready,M_16G_32G_AXI_rresp[1:0],M_16G_32G_AXI_rvalid,M_16G_32G_AXI_wdata[511:0],M_16G_32G_AXI_wlast,M_16G_32G_AXI_wready,M_16G_32G_AXI_wstrb[63:0],M_16G_32G_AXI_wvalid,M_32G_48G_AXI_araddr[63:0],M_32G_48G_AXI_arburst[1:0],M_32G_48G_AXI_arcache[3:0],M_32G_48G_AXI_arid[6:0],M_32G_48G_AXI_arlen[7:0],M_32G_48G_AXI_arlock[0:0],M_32G_48G_AXI_arprot[2:0],M_32G_48G_AXI_arqos[3:0],M_32G_48G_AXI_arready,M_32G_48G_AXI_arregion[3:0],M_32G_48G_AXI_arsize[2:0],M_32G_48G_AXI_arvalid,M_32G_48G_AXI_awaddr[63:0],M_32G_48G_AXI_awburst[1:0],M_32G_48G_AXI_awcache[3:0],M_32G_48G_AXI_awid[6:0],M_32G_48G_AXI_awlen[7:0],M_32G_48G_AXI_awlock[0:0],M_32G_48G_AXI_awprot[2:0],M_32G_48G_AXI_awqos[3:0],M_32G_48G_AXI_awready,M_32G_48G_AXI_awregion[3:0],M_32G_48G_AXI_awsize[2:0],M_32G_48G_AXI_awvalid,M_32G_48G_AXI_bid[6:0],M_32G_48G_AXI_bready,M_32G_48G_AXI_bresp[1:0],M_32G_48G_AXI_bvalid,M_32G_48G_AXI_rdata[511:0],M_32G_48G_AXI_rid[6:0],M_32G_48G_AXI_rlast,M_32G_48G_AXI_rready,M_32G_48G_AXI_rresp[1:0],M_32G_48G_AXI_rvalid,M_32G_48G_AXI_wdata[511:0],M_32G_48G_AXI_wlast,M_32G_48G_AXI_wready,M_32G_48G_AXI_wstrb[63:0],M_32G_48G_AXI_wvalid,M_48G_64G_AXI_araddr[63:0],M_48G_64G_AXI_arburst[1:0],M_48G_64G_AXI_arcache[3:0],M_48G_64G_AXI_arid[6:0],M_48G_64G_AXI_arlen[7:0],M_48G_64G_AXI_arlock[0:0],M_48G_64G_AXI_arprot[2:0],M_48G_64G_AXI_arqos[3:0],M_48G_64G_AXI_arready,M_48G_64G_AXI_arregion[3:0],M_48G_64G_AXI_arsize[2:0],M_48G_64G_AXI_arvalid,M_48G_64G_AXI_awaddr[63:0],M_48G_64G_AXI_awburst[1:0],M_48G_64G_AXI_awcache[3:0],M_48G_64G_AXI_awid[6:0],M_48G_64G_AXI_awlen[7:0],M_48G_64G_AXI_awlock[0:0],M_48G_64G_AXI_awprot[2:0],M_48G_64G_AXI_awqos[3:0],M_48G_64G_AXI_awready,M_48G_64G_AXI_awregion[3:0],M_48G_64G_AXI_awsize[2:0],M_48G_64G_AXI_awvalid,M_48G_64G_AXI_bid[6:0],M_48G_64G_AXI_bready,M_48G_64G_AXI_bresp[1:0],M_48G_64G_AXI_bvalid,M_48G_64G_AXI_rdata[511:0],M_48G_64G_AXI_rid[6:0],M_48G_64G_AXI_rlast,M_48G_64G_AXI_rready,M_48G_64G_AXI_rresp[1:0],M_48G_64G_AXI_rvalid,M_48G_64G_AXI_wdata[511:0],M_48G_64G_AXI_wlast,M_48G_64G_AXI_wready,M_48G_64G_AXI_wstrb[63:0],M_48G_64G_AXI_wvalid,S_PCIS_DRAM_AXI_araddr[63:0],S_PCIS_DRAM_AXI_arburst[1:0],S_PCIS_DRAM_AXI_arcache[3:0],S_PCIS_DRAM_AXI_arid[5:0],S_PCIS_DRAM_AXI_arlen[7:0],S_PCIS_DRAM_AXI_arlock[0:0],S_PCIS_DRAM_AXI_arprot[2:0],S_PCIS_DRAM_AXI_arqos[3:0],S_PCIS_DRAM_AXI_arready,S_PCIS_DRAM_AXI_arregion[3:0],S_PCIS_DRAM_AXI_arsize[2:0],S_PCIS_DRAM_AXI_arvalid,S_PCIS_DRAM_AXI_awaddr[63:0],S_PCIS_DRAM_AXI_awburst[1:0],S_PCIS_DRAM_AXI_awcache[3:0],S_PCIS_DRAM_AXI_awid[5:0],S_PCIS_DRAM_AXI_awlen[7:0],S_PCIS_DRAM_AXI_awlock[0:0],S_PCIS_DRAM_AXI_awprot[2:0],S_PCIS_DRAM_AXI_awqos[3:0],S_PCIS_DRAM_AXI_awready,S_PCIS_DRAM_AXI_awregion[3:0],S_PCIS_DRAM_AXI_awsize[2:0],S_PCIS_DRAM_AXI_awvalid,S_PCIS_DRAM_AXI_bid[5:0],S_PCIS_DRAM_AXI_bready,S_PCIS_DRAM_AXI_bresp[1:0],S_PCIS_DRAM_AXI_bvalid,S_PCIS_DRAM_AXI_rdata[511:0],S_PCIS_DRAM_AXI_rid[5:0],S_PCIS_DRAM_AXI_rlast,S_PCIS_DRAM_AXI_rready,S_PCIS_DRAM_AXI_rresp[1:0],S_PCIS_DRAM_AXI_rvalid,S_PCIS_DRAM_AXI_wdata[511:0],S_PCIS_DRAM_AXI_wlast,S_PCIS_DRAM_AXI_wready,S_PCIS_DRAM_AXI_wstrb[63:0],S_PCIS_DRAM_AXI_wvalid,S_RTL_DRAM_AXI_araddr[63:0],S_RTL_DRAM_AXI_arburst[1:0],S_RTL_DRAM_AXI_arcache[3:0],S_RTL_DRAM_AXI_arid[5:0],S_RTL_DRAM_AXI_arlen[7:0],S_RTL_DRAM_AXI_arlock[0:0],S_RTL_DRAM_AXI_arprot[2:0],S_RTL_DRAM_AXI_arqos[3:0],S_RTL_DRAM_AXI_arready,S_RTL_DRAM_AXI_arregion[3:0],S_RTL_DRAM_AXI_arsize[2:0],S_RTL_DRAM_AXI_arvalid,S_RTL_DRAM_AXI_awaddr[63:0],S_RTL_DRAM_AXI_awburst[1:0],S_RTL_DRAM_AXI_awcache[3:0],S_RTL_DRAM_AXI_awid[5:0],S_RTL_DRAM_AXI_awlen[7:0],S_RTL_DRAM_AXI_awlock[0:0],S_RTL_DRAM_AXI_awprot[2:0],S_RTL_DRAM_AXI_awqos[3:0],S_RTL_DRAM_AXI_awready,S_RTL_DRAM_AXI_awregion[3:0],S_RTL_DRAM_AXI_awsize[2:0],S_RTL_DRAM_AXI_awvalid,S_RTL_DRAM_AXI_bid[5:0],S_RTL_DRAM_AXI_bready,S_RTL_DRAM_AXI_bresp[1:0],S_RTL_DRAM_AXI_bvalid,S_RTL_DRAM_AXI_rdata[511:0],S_RTL_DRAM_AXI_rid[5:0],S_RTL_DRAM_AXI_rlast,S_RTL_DRAM_AXI_rready,S_RTL_DRAM_AXI_rresp[1:0],S_RTL_DRAM_AXI_rvalid,S_RTL_DRAM_AXI_wdata[511:0],S_RTL_DRAM_AXI_wlast,S_RTL_DRAM_AXI_wready,S_RTL_DRAM_AXI_wstrb[63:0],S_RTL_DRAM_AXI_wvalid";
begin
end;
